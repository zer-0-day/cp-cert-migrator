#Requires -Version 5.1

<#
.SYNOPSIS
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–±–æ—Ä–∫–∏ CPCertMigrator –≤ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª

.DESCRIPTION
–°–æ–∑–¥–∞–µ—Ç standalone .exe –≤–µ—Ä—Å–∏—é –º–æ–¥—É–ª—è CPCertMigrator –∏—Å–ø–æ–ª—å–∑—É—è ps2exe
#>

param(
    [Parameter()]
    [string]$OutputPath = ".\dist",
    
    [Parameter()]
    [switch]$SkipInstall  # –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫—É ps2exe
)

$ModuleVersion = "1.8.1"

Write-Host "=== –°–±–æ—Ä–∫–∞ CPCertMigrator v$ModuleVersion –≤ .exe ===" -ForegroundColor Cyan
Write-Host ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ ps2exe
if (-not $SkipInstall) {
    Write-Host "–ü—Ä–æ–≤–µ—Ä–∫–∞ ps2exe..." -ForegroundColor Yellow
    
    if (-not (Get-Module -ListAvailable -Name ps2exe)) {
        Write-Host "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ ps2exe..." -ForegroundColor Yellow
        try {
            Install-Module -Name ps2exe -Force -Scope CurrentUser -ErrorAction Stop
            Write-Host "ps2exe —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!" -ForegroundColor Green
        } catch {
            Write-Host "–û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å ps2exe" -ForegroundColor Red
            Write-Host $_.Exception.Message -ForegroundColor Yellow
            exit 1
        }
    } else {
        Write-Host "ps2exe —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" -ForegroundColor Green
    }
}

# –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ –¥–ª—è —Å–±–æ—Ä–∫–∏
if (-not (Test-Path $OutputPath)) {
    New-Item -ItemType Directory -Path $OutputPath -Force | Out-Null
    Write-Host "–°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞: $OutputPath" -ForegroundColor Green
}

# –°–æ–∑–¥–∞–Ω–∏–µ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ launcher'–∞ —Å –º–æ–¥—É–ª–µ–º
Write-Host "–°–æ–∑–¥–∞–Ω–∏–µ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ launcher'–∞..." -ForegroundColor Yellow

$moduleContent = Get-Content ".\CPCertMigrator.psm1" -Raw -Encoding UTF8
$launcherContent = Get-Content ".\CPCertMigrator-Launcher.ps1" -Raw -Encoding UTF8

# –ó–∞–º–µ–Ω—è–µ–º –∑–∞–≥—Ä—É–∑–∫—É –º–æ–¥—É–ª—è –Ω–∞ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –∫–æ–¥
$embeddedLauncher = $launcherContent -replace 'if \(Test-Path.*?\}', @"
# –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –º–æ–¥—É–ª—å CPCertMigrator
`$moduleCode = @'
$moduleContent
'@

# –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ –º–æ–¥—É–ª—è
Invoke-Expression `$moduleCode
"@

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π launcher
$embeddedLauncherPath = Join-Path $OutputPath "CPCertMigrator-Embedded.ps1"
$embeddedLauncher | Out-File -FilePath $embeddedLauncherPath -Encoding UTF8
Write-Host "–í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π launcher —Å–æ–∑–¥–∞–Ω: $embeddedLauncherPath" -ForegroundColor Green

# –ò–º–ø–æ—Ä—Ç ps2exe
Import-Module ps2exe -Force

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–±–æ—Ä–∫–∏
$buildParams = @{
    inputFile = $embeddedLauncherPath
    outputFile = Join-Path $OutputPath "CPCertMigrator.exe"
    noConsole = $false
    noOutput = $false
    noError = $false
    noVisualStyles = $false
    exitOnCancel = $true
    DPIAware = $true
    winFormsDPIAware = $true
    requireAdmin = $false
    supportOS = $true
    virtualize = $false
    longPaths = $true
}

# –°–±–æ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–π –≤–µ—Ä—Å–∏–∏
Write-Host "–°–±–æ—Ä–∫–∞ CPCertMigrator.exe..." -ForegroundColor Yellow
try {
    Invoke-ps2exe @buildParams -ErrorAction Stop
    Write-Host "‚úÖ CPCertMigrator.exe —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!" -ForegroundColor Green
} catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ –æ—Å–Ω–æ–≤–Ω–æ–π –≤–µ—Ä—Å–∏–∏:" -ForegroundColor Red
    Write-Host $_.Exception.Message -ForegroundColor Yellow
}

# –°–±–æ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ —Å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ–º –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
$buildParams.outputFile = Join-Path $OutputPath "CPCertMigrator-Admin.exe"
$buildParams.requireAdmin = $true

Write-Host "–°–±–æ—Ä–∫–∞ CPCertMigrator-Admin.exe..." -ForegroundColor Yellow
try {
    Invoke-ps2exe @buildParams -ErrorAction Stop
    Write-Host "‚úÖ CPCertMigrator-Admin.exe —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!" -ForegroundColor Green
} catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ admin –≤–µ—Ä—Å–∏–∏:" -ForegroundColor Red
    Write-Host $_.Exception.Message -ForegroundColor Yellow
}

# –°–æ–∑–¥–∞–Ω–∏–µ README –¥–ª—è —Ä–µ–ª–∏–∑–∞
$readmeContent = @"
# CryptoPro Certificate Migrator v$ModuleVersion

## –ò—Å–ø–æ–ª–Ω—è–µ–º—ã–µ —Ñ–∞–π–ª—ã

### CPCertMigrator.exe
- –û—Å–Ω–æ–≤–Ω–∞—è –≤–µ—Ä—Å–∏—è –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
- –†–∞–±–æ—Ç–∞–µ—Ç —Å –ø—Ä–∞–≤–∞–º–∏ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
- –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ LocalMachine —Ö—Ä–∞–Ω–∏–ª–∏—â—É

### CPCertMigrator-Admin.exe  
- –í–µ—Ä—Å–∏—è —Å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ–º –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
- –ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º
- –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–ª—è —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤

## –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ

1. –°–∫–∞—á–∞–π—Ç–µ –Ω—É–∂–Ω—É—é –≤–µ—Ä—Å–∏—é .exe —Ñ–∞–π–ª–∞
2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –¥–≤–æ–π–Ω—ã–º –∫–ª–∏–∫–æ–º –∏–ª–∏ –∏–∑ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
3. –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –≤ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–º –º–µ–Ω—é

## –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏

```
CPCertMigrator.exe --version    # –ü–æ–∫–∞–∑–∞—Ç—å –≤–µ—Ä—Å–∏—é
CPCertMigrator.exe --admin      # –ó–∞–ø—Ä–æ—Å–∏—Ç—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
```

## –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è

- Windows 7/Server 2008 R2 –∏–ª–∏ –≤—ã—à–µ
- PowerShell 5.1 –∏–ª–∏ –≤—ã—à–µ
- CryptoPro CSP (–¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞–º–∏)

## –§—É–Ω–∫—Ü–∏–∏

- –ü—Ä–æ—Å–º–æ—Ç—Ä —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ –≤ CurrentUser –∏ LocalMachine
- –≠–∫—Å–ø–æ—Ä—Ç —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ –≤ PFX —Ñ–∞–π–ª—ã
- –ò–º–ø–æ—Ä—Ç —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ –∏–∑ PFX —Ñ–∞–π–ª–æ–≤
- –ë—ã—Å—Ç—Ä–∞—è –º–∏–≥—Ä–∞—Ü–∏—è –º–µ–∂–¥—É —Ö—Ä–∞–Ω–∏–ª–∏—â–∞–º–∏
- –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã

## –ü–æ–¥–¥–µ—Ä–∂–∫–∞

GitHub: https://github.com/zer-0-day/cp-cert-migrator
PowerShell Gallery: https://www.powershellgallery.com/packages/CPCertMigrator
"@

$readmePath = Join-Path $OutputPath "README.txt"
$readmeContent | Out-File -FilePath $readmePath -Encoding UTF8
Write-Host "README —Å–æ–∑–¥–∞–Ω: $readmePath" -ForegroundColor Green

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–∏—Ü–µ–Ω–∑–∏–∏
if (Test-Path ".\LICENSE") {
    Copy-Item ".\LICENSE" -Destination (Join-Path $OutputPath "LICENSE.txt")
    Write-Host "–õ–∏—Ü–µ–Ω–∑–∏—è —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞" -ForegroundColor Green
}

# –ò—Ç–æ–≥–∏ —Å–±–æ—Ä–∫–∏
Write-Host ""
Write-Host "=== –°–ë–û–†–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê ===" -ForegroundColor Cyan
Write-Host "–ü–∞–ø–∫–∞ —Å–±–æ—Ä–∫–∏: $OutputPath" -ForegroundColor White
Write-Host "–§–∞–π–ª—ã:" -ForegroundColor White

Get-ChildItem $OutputPath -Filter "*.exe" | ForEach-Object {
    $size = [math]::Round($_.Length / 1MB, 2)
    Write-Host "  üì¶ $($_.Name) ($size MB)" -ForegroundColor Green
}

Write-Host ""
Write-Host "–ì–æ—Ç–æ–≤–æ –∫ —Ä–µ–ª–∏–∑—É! üéâ" -ForegroundColor Green