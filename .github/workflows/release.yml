name: Create Release with Executable

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install ps2exe
      shell: pwsh
      run: Install-Module -Name ps2exe -Force -Scope CurrentUser
        
    - name: Create launcher script
      shell: pwsh
      run: |
        # Создаем launcher скрипт с проверкой обновлений
        @'
        #Requires -Version 5.1
        # CryptoPro Certificate Migrator Launcher
        
        Write-Host "=== CryptoPro Certificate Migrator ===" -ForegroundColor Green
        Write-Host "Проверка системы..." -ForegroundColor Yellow
        
        # Проверка версии PowerShell
        if ($PSVersionTable.PSVersion.Major -lt 5) {
            Write-Host 'ОШИБКА: Требуется PowerShell 5.1 или выше!' -ForegroundColor Red
            Write-Host "Текущая версия: $($PSVersionTable.PSVersion)" -ForegroundColor Red
            Read-Host 'Нажмите Enter для выхода'
            exit 1
        }
        
        try {
            # Проверяем наличие модуля
            $localModule = Get-Module -ListAvailable -Name CPCertMigrator | Sort-Object Version -Descending | Select-Object -First 1
            
            # Проверяем последнюю версию в PowerShell Gallery
            Write-Host "Проверка обновлений..." -ForegroundColor Yellow
            try {
                $onlineModule = Find-Module -Name CPCertMigrator -ErrorAction SilentlyContinue
            } catch {
                Write-Host "Не удалось проверить обновления (нет интернета?)" -ForegroundColor Yellow
                $onlineModule = $null
            }
            
            $needsInstall = $false
            $needsUpdate = $false
            
            if (-not $localModule) {
                Write-Host "Модуль CPCertMigrator не найден. Устанавливаем..." -ForegroundColor Yellow
                $needsInstall = $true
            } elseif ($onlineModule -and ($localModule.Version -lt $onlineModule.Version)) {
                Write-Host "Найдена новая версия модуля: $($onlineModule.Version) (текущая: $($localModule.Version))" -ForegroundColor Yellow
                Write-Host "Обновляем модуль..." -ForegroundColor Yellow
                $needsUpdate = $true
            } else {
                Write-Host "Модуль CPCertMigrator найден (версия: $($localModule.Version))" -ForegroundColor Green
                if ($onlineModule) {
                    Write-Host "Версия актуальна" -ForegroundColor Green
                }
            }
            
            # Устанавливаем или обновляем модуль
            if ($needsInstall -or $needsUpdate) {
                try {
                    Install-Module -Name CPCertMigrator -Scope CurrentUser -Force -AllowClobber
                    if ($needsInstall) {
                        Write-Host "Модуль успешно установлен!" -ForegroundColor Green
                    } else {
                        Write-Host "Модуль успешно обновлен!" -ForegroundColor Green
                    }
                } catch {
                    Write-Host "Ошибка установки/обновления модуля: $($_.Exception.Message)" -ForegroundColor Red
                    Write-Host "Попробуйте запустить PowerShell от имени администратора" -ForegroundColor Yellow
                    Read-Host 'Нажмите Enter для выхода'
                    exit 1
                }
            }
            
            # Импортируем и запускаем модуль
            Import-Module CPCertMigrator -Force
            Write-Host "Запуск CryptoPro Certificate Migrator..." -ForegroundColor Green
            Write-Host ""
            
            Start-CryptoProCertMigrator
            
        } catch {
            Write-Host ""
            Write-Host "Ошибка: $($_.Exception.Message)" -ForegroundColor Red
            Write-Host "Стек вызовов:" -ForegroundColor Yellow
            Write-Host $_.ScriptStackTrace -ForegroundColor Gray
            Write-Host ""
            Read-Host 'Нажмите Enter для выхода'
        }
        '@ | Out-File "launcher.ps1" -Encoding UTF8
        
    - name: Build executable
      shell: pwsh
      run: |
        Import-Module ps2exe
        Invoke-ps2exe -inputFile "launcher.ps1" -outputFile "CPCertMigrator.exe" -noConsole:$false -requireAdmin
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: CPCertMigrator.exe
        body: |
          ## CryptoPro Certificate Migrator ${{ github.ref_name }}
          
          ### Скачать
          - **CPCertMigrator.exe** - Launcher с автоустановкой модуля
          
          ### Использование
          1. Скачайте CPCertMigrator.exe
          2. Запустите двойным кликом (от имени администратора при первом запуске)
          3. При первом запуске модуль автоматически установится из PowerShell Gallery
          4. Следуйте инструкциям в меню
          
          ### Требования
          - Windows 7+ 
          - PowerShell 5.1+
          - CryptoPro CSP
          - Интернет-соединение (для первой установки модуля)
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}