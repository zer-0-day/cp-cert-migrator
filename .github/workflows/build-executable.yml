name: Build Executable

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build'
        required: true
        default: '1.8.1'

jobs:
  build-exe:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup PowerShell
      shell: pwsh
      run: |
        Write-Host "PowerShell Version: $($PSVersionTable.PSVersion)"
        Write-Host "OS: $($PSVersionTable.OS)"
        
    - name: Install ps2exe
      shell: pwsh
      run: |
        Write-Host "Installing ps2exe..."
        Install-Module -Name ps2exe -Force -Scope CurrentUser
        Import-Module ps2exe
        Write-Host "ps2exe installed successfully"
        
    - name: Build executables
      shell: pwsh
      run: |
        Write-Host "Building CPCertMigrator executables..."
        .\Build-Executable.ps1 -SkipInstall
        
    - name: List built files
      shell: pwsh
      run: |
        Write-Host "Built files:"
        Get-ChildItem .\dist -Recurse | ForEach-Object {
          Write-Host "  $($_.FullName) ($([math]::Round($_.Length / 1KB, 2)) KB)"
        }
        
    - name: Create release archive
      shell: pwsh
      run: |
        $version = "${{ github.event.inputs.version }}"
        if (-not $version) {
          $version = "${{ github.event.release.tag_name }}" -replace '^v', ''
        }
        
        $archiveName = "CPCertMigrator-v$version-Standalone.zip"
        Compress-Archive -Path ".\dist\*" -DestinationPath $archiveName
        Write-Host "Created archive: $archiveName"
        
        # Set output for next step
        echo "ARCHIVE_NAME=$archiveName" >> $env:GITHUB_ENV
        echo "VERSION=$version" >> $env:GITHUB_ENV
        
    - name: Upload to release (if release event)
      if: github.event_name == 'release'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ${{ env.ARCHIVE_NAME }}
        asset_name: ${{ env.ARCHIVE_NAME }}
        asset_content_type: application/zip
        
    - name: Upload as artifact (if manual trigger)
      if: github.event_name == 'workflow_dispatch'
      uses: actions/upload-artifact@v4
      with:
        name: CPCertMigrator-Executable-v${{ env.VERSION }}
        path: dist/
        retention-days: 30